% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mice.spark.R
\name{sampler.spark}
\alias{sampler.spark}
\title{MICE sampler function}
\usage{
sampler.spark(
  sc,
  data,
  imp_init,
  fromto,
  var_types,
  predictorMatrix = NULL,
  checkpointing,
  printFlag
)
}
\arguments{
\item{sc}{A Spark connection}

\item{data}{A Spark DataFrame, the original data with missing values}

\item{imp_init}{A Spark DataFrame, the original data with missing values, but with initial imputation (by random sampling or mean/median/mode imputation)}

\item{fromto}{A vector of length 2, the range of iterations to perform (from, to)}

\item{var_types}{A named character vector, the variable types of the columns in the data.}

\item{predictorMatrix}{A matrix, the predictor matrix to use for the imputation. TBD}

\item{checkpointing}{Default TRUE. Can be set to FALSE if you are running the package without access to a HDFS directory for checkpointing. It is strongly recommended to keep it to TRUE to avoid Stackoverflow errors.}

\item{printFlag}{A boolean, whether to print debug information.}
}
\value{
The Spark DataFrame with missing values imputed for all variables
}
\description{
This function is the core of the MICE algorithm. It iteratively imputes missing values in a Spark DataFrame using a set of imputation methods based on the variable types.
}
\examples{
# Example for sampler.spark function
# Define variable types for sampler
#var_types <- c(
 # age = "Continuous_int",
 # income = "Continuous_int",
 # education = "Nominal"
#)

# Create initial imputation (simple mean/mode)
#imp_init <- sdf \%>\%
 # mutate(
 #   age = ifelse(is.na(age), 35, age),
 #   income = ifelse(is.na(income), 60000, income),
 #   education = ifelse(is.na(education), "Medium", education)
 # )

# Run sampler
#sampled_data <- sampler.spark(
 # sc = sc,
 # data = sdf,
 # imp_init = imp_init,
 # fromto = c(1, 2),
 # var_types = var_types,
 # printFlag = TRUE,
 # checkpointing = FALSE
#)

# View results
#sampled_data \%>\% collect()
}
